<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>ERICtaf_te</artifactId>
        <groupId>com.ericsson.cifwk</groupId>
        <version>2.70.2-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ericsson.cifwk.taf.executor</groupId>
    <artifactId>te-docker</artifactId>

    <properties>
        <dockerRegistry>armdocker.rnd.ericsson.se</dockerRegistry>
        <dockerRegistryUrl>https://${dockerRegistry}/v2/</dockerRegistryUrl>
        <dockerImagePrefix>proj_taf_te</dockerImagePrefix>
        <allure-service.version>1.1.23</allure-service.version>
        <tdm.version>1.0.112</tdm.version>
    </properties>

    <dependencies>
        <!-- These plugins are needed for work with Jenkins setup Groovy scripts in IDE -->
        <dependency>
            <groupId>org.csanchez.jenkins.plugins</groupId>
            <artifactId>kubernetes</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.main</groupId>
            <artifactId>jenkins-core</artifactId>
            <version>2.25</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.ericsson.cifwk.taf.executor</groupId>
            <artifactId>te-jenkins-plugin</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <!-- To process the reference to the parent image version in some Dockerfiles -->
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>assembly.xml</descriptor>
                    </descriptors>
                    <appendAssemblyId>false</appendAssemblyId>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <!-- Activate pushing to registry via -DpushImageTag (do it only for the release!) -->
            <id>dockerImages</id>
            <activation>
                <property>
                    <name>dockerImage</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration>
                            <serverId>docker-hub</serverId>
                            <registryUrl>${dockerRegistryUrl}</registryUrl>
                            <forceTags>true</forceTags>
                            <imageTags>
                                <imageTag>${project.version}</imageTag>
                            </imageTags>
                        </configuration>
                        <executions>
                            <execution>
                                <id>build-te-docker-image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <configuration>
                                    <imageName>${dockerRegistry}/${dockerImagePrefix}/${dockerImage}</imageName>
                                    <dockerDirectory>${project.build.outputDirectory}/${dockerImage}</dockerDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>push-te-docker-image</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>push</goal>
                                </goals>
                                <configuration>
                                    <imageName>${dockerRegistry}/${dockerImagePrefix}/${dockerImage}</imageName>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
